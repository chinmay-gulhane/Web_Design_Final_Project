openapi: 3.1.0
info:
  title: INFO6150 - Web Design and User Experience Engineering || Final Project || HUSKYBITES
  description: HuskyBites is food delivery app which helps users to search the restaurants in their local area and order food, while restaurant can manage food offered and process an order. Food delivery agent is assigned to deliver the food while also managing their own acocunt.
  version: "1.0.0"
servers:
  - url: http://localhost:8080/
tags:
  - name: restaurant
    description: Restaurant endpoints
paths:
  /restaurants:
    get:
      tags:
        - restaurant
      summary: Get all restaurants
      description: Registers a restaurant
      operationId: getrestaurants
      responses:
        2XX:
          description: Successful response with restaurant data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has value of type Restaurant
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
  /restaurant/register:
    post:
      tags:
        - restaurant
      summary: Register restaurant
      description: Registers a restaurant
      operationId: registerrestaurant
      requestBody:
        description: Register Restaurant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses: 
        2XX:
          description: Restaurant Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has value of type Restaurant
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
  /restaurants/{restaurantId}:
    get:
      tags:
        - restaurant
      summary: Get specific restaurant details
      description: Get specific restaurant details
      operationId: getrestaurant
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: ID of the restaurant to retrieve
          schema:
            type: string
            format: uuid
      responses:
        2XX:
          description: Successful response return restaurant object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has value of type Restaurant
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    put:
      tags:
        - restaurant
      summary: Update details of restaurant
      description: update restaurant details
      operationId: updaterestaurant
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: ID of the restaurant to retrieve
          schema:
            type: string
            format: uuid
      requestBody:
        description: Register Restaurant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses:
        2XX:
          description: Successful response return updated restaurant object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has value of type Restaurant
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    delete:
      tags:
        - restaurant
      summary: Delete restaurant
      description: Delete restaurant
      operationId: deleterestaurant
      parameters:
        - in: path
          name: restaurantId
          required: true
          description: ID of the restaurant to delete
          schema:
            type: string
      responses:
        2XX:
          description: Successful response delete restaurant object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has Restaurant Id
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
  /restaurants/{restaurantId}/foodItems/add:
    post:
      tags:
        - foodItem
      summary: Create new food item for restaurant
      description: update restaurant details
      operationId: addfooditemtomenu
      parameters:
        - in: path
          name: restaurantId
          required: true
          description: ID of the restaurant to add a food item
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItem'
      responses:
        2XX:
          description: Food Item Added Successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has object of added food item
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    get:
      tags:
        - foodItem
      summary: Get food items for restaurant
      description: Get food items for restaurant
      operationId: getfooditemsofrestaurant
      parameters:
        - in: path
          name: restaurantId
          required: true
          description: ID of the restaurant to retrieve food items
          schema:
            type: string
      responses:
        2XX:
          description: Food Item Added Successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has array of FoodItems
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX: 
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
  /restaurants/{restaurantId}/foodItems/{foodItemId}:
    delete:
      tags:
        - foodItem
      summary: Delete food item for restaurant
      description: Delete food item for restaurant
      operationId: deletfooditemofrestaurant
      parameters:
        - in: path
          name: restaurantId
          required: true
          description: ID of the restaurant
          schema:
            type: string
        - in: path
          name: foodItemId
          required: true
          description: ID of the food item to delete
          schema:
            type: string
      responses:
        2XX:
          description: Food Item Added Successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has food item id
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX:
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
    put:
      tags:
        - foodItem
      summary: Update food item for restaurant
      description: Update food item for restaurant
      operationId: updatefooditemsofrestaurant
      parameters:
        - in: path
          name: restaurantId
          required: true
          description: ID of the restaurant
          schema:
            type: string
        - in: path
          name: foodItemId
          required: true
          description: ID of the food item to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItem'
      responses:
        2XX:
          description: Food Item Added Successfully
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
                description: Data has updated food item object
        4XX:
          description: Client error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ClientErrorResponse'
        5XX:
          description: Server error response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/ServerErrorResponse'
components:
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
          description: The street address line
          examples:
            - 221B Baker Street
        city:
          type: string
          description: The city of the address
          examples: 
            - Boston
        state:
          type: string
          description: The state or region of the address
          examples:
            - Massachusets
        country:
          type: string
          description: The country of the address
          examples:
            - United States of America
        zipCode:
          type: string
          description: The ZIP or postal code of the address
          examples:
            - 02120
        geoLocation:
          type: object
          properties:
            latitude:
              type: number
              format: double
              description: The latitude coordinate of the address
            longitude:
              type: number
              format: double
              description: The longitude coordinate of the address
          description: The geographical location coordinates of the address
          examples:
            - latitude: 51.523880452913
            - longitude: -0.1585449744738932
    FoodItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the food item
          examples:
            - d290f1ee-6c54-4b01-90e6-d701748f0851
        foodImage:
          type: string
          format: uri
          description: URL of the food item image
          examples:
            - '/img/zhunka-bhaker.png'
        restaurantId:
          type: string
          format: uuid
          description: The unique identifier for the restaurant
          examples:
            - d290f1ee-6c54-4b01-90e6-d701748f0851
        price:
          type: number
          format: double
          description: The price of the food item
          examples: 
            - 10.2
        rating:
          type: number
          format: double
          description: The rating of the food item
          examples:
            - 2.3
    Restaurant:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the restaurant
          examples:
            - d290f1ee-6c54-4b01-90e6-d701748f0851
        foodItems:
          type: array
          items:
            $ref: '#/components/schemas/FoodItem'
          description: The list of food items offered by the restaurant
          examples:
            - 
              - id: d290f1ee-6c54-4b01-90e6-d701748f0851
                foodImage: '/img/zhunka-bhaker.png'
                restaurantId: d290f1ee-6c54-4b01-90e6-d701748f0851
                price: 12.2
                rating: 3.5
        rating:
          type: number
          format: double
          description: The overall rating of the restaurant
          examples:
            - 3.5
        # locationGeoTag:
        #   type: object
        #   properties:
        #     latitude:
        #       type: number
        #       format: double
        #       description: The latitude coordinate of the restaurant's location
        #     longitude:
        #       type: number
        #       format: double
        #       description: The longitude coordinate of the restaurant's location
        #   description: The geographical coordinates of the restaurant's location
        #   examples:
        #     - latitude: 51.523880452913
        #       longitude: -0.1585449744738932
        address:
          $ref: '#/components/schemas/Address'
          description: The address of the restaurant
          examples:
            - addressLine: 221B Baker Street
              city: Boston
              state: Massachusetts
              country: United States of America
              zipCode: 02120
              geoLocation:
                latitide: 51.523880452913
                longitude: -0.1585449744738932
        phoneNumber:
          type: string
          description: The phone number of the restaurant
          examples:
            - 1234567890
        profilePhoto:
          type: string
          format: uri
          description: URL of the restaurant's profile photo
          examples:
            - '/img/profile-photo.png'
        email:
          type: string
          format: email
          description: The email address of the restaurant
          examples:
            - a@b.com
        password:
          type: string
          description: The password for restaurant authentication
          examples:
            - Password@123#
        cuisine:
          type: array
          items:
            type: string
          description: The cuisine type offered by the restaurant
          examples:
            - 
              - Indian
              - Italian
              - Arabian
        offers:
          type: array
          items:
            type: string
          description: Special offers or promotions provided by the restaurant
          examples:
            -
              delhi20: 20% off
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
      required:
        - code
        - message
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
          examples:
            - true
            - false
        data:
          type: object
          description: The data related to the request
        message:
          type: string
          description: A message related to the request
    ClientErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error summary
        message:
          type: string
          description: Error description
    ServerErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error summary
        message:
          type: string
          description: Error description